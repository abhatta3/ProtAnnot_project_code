import sys
from Bio import SeqIO, Seq
import re

'''
at code also change 

   #sample=linew[0].split('-')[0]
    sample=linew[0][:-8]
    #sample=linew[0].split('_')[0]


best on sample patterns

'''
#data=open("/home/anindya/VU_known_search/VU_known_normal_FDRspec01.txt","r")
#outfile=open("Appended_VU_known_normal_FDRspec01.txt","w")
#outlist=open("sample_and_protein_VU_known_normal_FDRspec01.txt","w")

#data=open("Normal_colon_RefSeq_SPECFDR01.txt","r")
#outfile=open("Appended_Normal_colon_RefSeq_SPECFDR01.txt","w")
#outlist=open("sample_and_protein_Normal_colon_RefSeq_SPECFDR01.txt","w")

#data=open("/home/anindya/VU_known_search/VU_known_tumor_FDRspec01.txt","r")
#outfile=open("Appended_VU_known_tumor_FDRspec01.txt","w")
#outlist=open("sample_and_protein_VU_known_tumor_FDRspec01.txt","w")

data=open(sys.argv[1],"r")
samplelist=open(sys.argv[2],"r")
output_key=sys.argv[[3]
outfile=open("Appended"+output_key,"w")
outlist=open("sample_and_protein"+output_key,"w")




idlist=[]
for line in samplelist:
    linew=line.strip().split("\t")
    idlist.append(linew[1])

unif=open("./Hardcoded/uniprot.seq.tab","r")
id_l={}
dic_upep={}
for line in unif:
    line=line.strip().split("\t")
    gene=line[0]
    uid=line[1]
    id_l[uid]=1
    useq=line[2]
    length=line[3] 
    if not dic_upep.has_key(gene):
        dic_t={}
        dic_t[uid]={'sequence':useq,'length':length}
        dic_upep[gene]=dic_t 
    else:
        dic_upep[gene][uid]={'sequence':useq,'length':length}


ensf=open("./Hardcoded/EnsamblIDTable.txt","r")

dic_ens={}

for line in ensf:
    line=line.strip().split("\t")
    gene=line[0]
    ensid=line[1]
    dic_ens[ensid]=gene


outfile.write("uid\tsample\tscannumber\tpeptide\tlength\n")


id_s={}

for i,line in enumerate(data):
    if i==0:
        continue  

    linew=line.strip().split("\t")
    #sample=linew[0].split('-')[0]
    #sample=linew[0][:-8]

    sample=linew[0].split('_')[0]

    id_s[sample]=1
    ensid=linew[9]
    scannumber=linew[2]

    peptide=linew[8].translate(None, ':-.*!@#$+0123456789')
    if dic_ens.has_key(ensid):
        gene=dic_ens[ensid]
        if dic_upep.has_key(gene):
            uid_dic=dic_upep[gene]
            for uid in uid_dic.keys():
                sequence=uid_dic[uid]['sequence']
                length=uid_dic[uid]['length']
                if peptide in sequence:
                    outfile.write("%s\t%s\t%s\t%s\t%s\n" %(uid,sample,scannumber,peptide,length))     
for idl in id_l:
    outlist.write("%s\t" %(idl))
outlist.write("\n")
for ids in id_s:
    outlist.write("%s\t" %(ids))
outlist.write("\n")


